{"ast":null,"code":"var _jsxFileName = \"/home/mahir/INTER-IIT/wordle/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Game from \"./components/Game\";\nimport { Types, AptosClient } from \"aptos\";\nimport { Provider, Network } from \"aptos\"; // Create an AptosClient to interact with devnet.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new AptosClient(\"https://fullnode.devnet.aptoslabs.com/v1\");\nconst provider = new Provider(Network.DEVNET);\nconst address = \"0x0fc6f90cffc13c8eb5312cfe1ed45f716a59cdfe524deef655bc1fe94408a2d8\";\n\nfunction App() {\n  _s();\n\n  const [address, setAddress] = useState(null);\n  const [account, setAccount] = useState(null);\n\n  const darkHandler = dark => {\n    if (dark) document.documentElement.classList.add(\"dark\");else document.documentElement.classList.remove(\"dark\");\n  };\n\n  const testContract = async () => {\n    const client = new AptosClient(\"https://fullnode.devnet.aptoslabs.com/v1\");\n    const provider = new Provider(Network.DEVNET);\n    const transaction = {\n      type: \"entry_function_payload\",\n      function: `${address}::test5::populate_word`,\n      arguments: [3, [97, 112, 116, 111, 115]],\n      type_arguments: []\n    };\n    const keyPress = {\n      type: \"entry_function_payload\",\n      function: `${address}::test5::pressedKey`,\n      arguments: [1, 0, 0, 117],\n      type_arguments: []\n    };\n\n    try {\n      await window.aptos.signAndSubmitTransaction(transaction);\n      const key = await window.aptos.signAndSubmitTransaction(keyPress);\n      console.log(key);\n      const res2 = await provider.getAccountResource(address, `${address}::test5::IdToWordle`);\n      console.log(res2);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const init = async () => {\n    try {\n      const {\n        address: connectedAddress\n      } = await window.aptos.connect();\n      setAddress(connectedAddress);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n  useEffect(() => {\n    if (!address) return;\n    const client = new AptosClient(\"https://fullnode.devnet.aptoslabs.com/v1\");\n    client.getAccount(address).then(setAccount);\n  }, [address]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app dark:bg-zinc-800`,\n    children: [/*#__PURE__*/_jsxDEV(Game, {\n      darkness: darkHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Account Address: \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sequence Number: \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: account === null || account === void 0 ? void 0 : account.sequence_number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testContract,\n        children: \"Click meeee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1p0jhgIdTo98glMFs2Q52MQYIFc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mahir/INTER-IIT/wordle/src/App.js"],"names":["React","useState","useEffect","Game","Types","AptosClient","Provider","Network","client","provider","DEVNET","address","App","setAddress","account","setAccount","darkHandler","dark","document","documentElement","classList","add","remove","testContract","transaction","type","function","arguments","type_arguments","keyPress","window","aptos","signAndSubmitTransaction","key","console","log","res2","getAccountResource","err","init","connectedAddress","connect","error","getAccount","then","sequence_number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Game from \"./components/Game\";\nimport { Types, AptosClient } from \"aptos\";\nimport { Provider, Network } from \"aptos\";\n\n// Create an AptosClient to interact with devnet.\nconst client = new AptosClient(\"https://fullnode.devnet.aptoslabs.com/v1\");\nconst provider = new Provider(Network.DEVNET);\n\nconst address =\n  \"0x0fc6f90cffc13c8eb5312cfe1ed45f716a59cdfe524deef655bc1fe94408a2d8\";\n\n\nfunction App() {\n  const [address, setAddress] = useState(null);\n  const [account, setAccount] = useState(null);\n\n  const darkHandler = (dark) => {\n    if (dark) document.documentElement.classList.add(\"dark\");\n    else document.documentElement.classList.remove(\"dark\");\n  };\n\n  const testContract = async () => {\n    const client = new AptosClient(\"https://fullnode.devnet.aptoslabs.com/v1\");\n    const provider = new Provider(Network.DEVNET);\n\n    const transaction = {\n      type: \"entry_function_payload\",\n      function: `${address}::test5::populate_word`,\n      arguments: [3, [97, 112, 116, 111, 115]],\n      type_arguments: [],\n    };\n\n    const keyPress = {\n      type: \"entry_function_payload\",\n      function: `${address}::test5::pressedKey`,\n      arguments: [1, 0, 0, 117],\n      type_arguments: [],\n    };\n\n    try {\n      await window.aptos.signAndSubmitTransaction(transaction);\n      const key = await window.aptos.signAndSubmitTransaction(keyPress);\n      console.log(key);\n      const res2 = await provider.getAccountResource(\n        address,\n        `${address}::test5::IdToWordle`\n      );\n      console.log(res2);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const init = async () => {\n    try {\n      const { address: connectedAddress } = await window.aptos.connect();\n      setAddress(connectedAddress);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (!address) return;\n    const client = new AptosClient(\"https://fullnode.devnet.aptoslabs.com/v1\");\n    client.getAccount(address).then(setAccount);\n  }, [address]);\n\n  return (\n    <div className={`app dark:bg-zinc-800`}>\n      <Game darkness={darkHandler} />\n      <div className=\"App\">\n        <p>\n          Account Address: <code>{address}</code>\n        </p>\n        <p>\n          Sequence Number: <code>{account?.sequence_number}</code>\n        </p>\n        <button onClick={testContract}>Click meeee</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}