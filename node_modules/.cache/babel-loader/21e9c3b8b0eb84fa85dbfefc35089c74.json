{"ast":null,"code":"var _jsxFileName = \"/home/mahir/INTER-IIT/wordle/src/components/Game/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Board from \"../Board\";\nimport Error from \"../Error\";\nimport Help from \"../Help\";\nimport KeyBoard from \"../KeyBoard\";\nimport Modal from \"../Modal\";\nimport NavBar from \"../NavBar\";\nimport styles from \"./style.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Game(props) {\n  _s();\n\n  const [letter, setLetter] = useState();\n  const [changed, setChanged] = useState(false);\n  const [letters, setLetters] = useState({});\n  const [help, setHelp] = useState(false);\n  const [clicked, setClicked] = useState(0);\n  const [error, setError] = useState(\"\");\n  const [dark, setDark] = useState(false);\n  const [keyPresses, setKeyPresses] = useState([]);\n\n  const onClickDown = event => {\n    if (event.key === \"Enter\") {\n      setLetter(\"ENTER\");\n      setClicked(clicked + 1);\n      handleEnterPress();\n    } else if (event.key === \"Backspace\") {\n      // If \"Backspace\" is pressed, remove the last key press entry\n      setKeyPresses(prevKeyPresses => prevKeyPresses.slice(0, -1));\n    } else if (\"abcdefghijklmnopqrstuvwxyz\".includes(event.key.toLowerCase())) {\n      const newKeyPress = {\n        type: \"entry_function_payload\",\n        function: `${props.address}::test4::pressedKey`,\n        arguments: [1, 0, 0, event.key.charCodeAt(0)],\n        type_arguments: []\n      }; // Otherwise, add a new key press entry\n\n      setKeyPresses(prevKeyPresses => [...prevKeyPresses, newKeyPress]);\n      setLetter(event.key.toUpperCase());\n      setClicked(clicked + 1);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onClickDown);\n    return () => window.removeEventListener(\"keydown\", onClickDown);\n  }, [keyPresses]);\n  useEffect(() => {\n    props.darkness(dark);\n  }, [dark]);\n\n  const keyHandler = letterValue => {\n    setLetter(letterValue);\n    setClicked(clicked + 1);\n  };\n\n  const LettersHandler = lettersValue => {\n    setLetters(lettersValue);\n    setChanged(!changed);\n  };\n\n  const handleEnterPress = async () => {\n    // Loop through key presses and send transactions\n    for (const keyPress of keyPresses) {\n      try {\n        console.log(keyPress);\n        const key = await window.aptos.signAndSubmitTransaction(keyPress);\n        console.log(key); // Handle the result as needed\n      } catch (err) {\n        console.error(err);\n      }\n    } // Clear key presses after handling them\n\n\n    setKeyPresses([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [help && /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"How to play!\",\n      help: setHelp,\n      children: [\" \", /*#__PURE__*/_jsxDEV(Help, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Error, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.game,\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        help: setHelp,\n        darkness: setDark,\n        dark: dark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        letter: letter,\n        clicks: clicked,\n        letters: LettersHandler,\n        error: setError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KeyBoard, {\n        keyHandler: keyHandler,\n        letters: letters,\n        changed: changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEnterPress,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Game, \"6fQQqFlw74KACCwZ45gPRTz+JRo=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/mahir/INTER-IIT/wordle/src/components/Game/index.jsx"],"names":["useState","useEffect","Board","Error","Help","KeyBoard","Modal","NavBar","styles","Game","props","letter","setLetter","changed","setChanged","letters","setLetters","help","setHelp","clicked","setClicked","error","setError","dark","setDark","keyPresses","setKeyPresses","onClickDown","event","key","handleEnterPress","prevKeyPresses","slice","includes","toLowerCase","newKeyPress","type","function","address","arguments","charCodeAt","type_arguments","toUpperCase","window","addEventListener","removeEventListener","darkness","keyHandler","letterValue","LettersHandler","lettersValue","keyPress","console","log","aptos","signAndSubmitTransaction","err","game"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,EAApC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACyB,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAM2B,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACzBjB,MAAAA,SAAS,CAAC,OAAD,CAAT;AACAQ,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACAW,MAAAA,gBAAgB;AACjB,KAJD,MAIO,IAAIF,KAAK,CAACC,GAAN,KAAc,WAAlB,EAA+B;AACpC;AACAH,MAAAA,aAAa,CAAEK,cAAD,IAAoBA,cAAc,CAACC,KAAf,CAAqB,CAArB,EAAwB,CAAC,CAAzB,CAArB,CAAb;AACD,KAHM,MAGA,IAAI,6BAA6BC,QAA7B,CAAsCL,KAAK,CAACC,GAAN,CAAUK,WAAV,EAAtC,CAAJ,EAAoE;AACzE,YAAMC,WAAW,GAAG;AAClBC,QAAAA,IAAI,EAAE,wBADY;AAElBC,QAAAA,QAAQ,EAAG,GAAE3B,KAAK,CAAC4B,OAAQ,qBAFT;AAGlBC,QAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUX,KAAK,CAACC,GAAN,CAAUW,UAAV,CAAqB,CAArB,CAAV,CAHO;AAIlBC,QAAAA,cAAc,EAAE;AAJE,OAApB,CADyE,CAOzE;;AACAf,MAAAA,aAAa,CAAEK,cAAD,IAAoB,CAAC,GAAGA,cAAJ,EAAoBI,WAApB,CAArB,CAAb;AACAvB,MAAAA,SAAS,CAACgB,KAAK,CAACC,GAAN,CAAUa,WAAV,EAAD,CAAT;AACAtB,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD;AACF,GApBD;;AAsBAlB,EAAAA,SAAS,CAAC,MAAM;AACd0C,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCjB,WAAnC;AAEA,WAAO,MAAMgB,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsClB,WAAtC,CAAb;AACD,GAJQ,EAIN,CAACF,UAAD,CAJM,CAAT;AAMAxB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAACoC,QAAN,CAAevB,IAAf;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,QAAMwB,UAAU,GAAIC,WAAD,IAAiB;AAClCpC,IAAAA,SAAS,CAACoC,WAAD,CAAT;AACA5B,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,GAHD;;AAKA,QAAM8B,cAAc,GAAIC,YAAD,IAAkB;AACvClC,IAAAA,UAAU,CAACkC,YAAD,CAAV;AACApC,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAHD;;AAKA,QAAMiB,gBAAgB,GAAG,YAAY;AACnC;AACA,SAAK,MAAMqB,QAAX,IAAuB1B,UAAvB,EAAmC;AACjC,UAAI;AACF2B,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,cAAMtB,GAAG,GAAG,MAAMc,MAAM,CAACW,KAAP,CAAaC,wBAAb,CAAsCJ,QAAtC,CAAlB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYxB,GAAZ,EAHE,CAIF;AACD,OALD,CAKE,OAAO2B,GAAP,EAAY;AACZJ,QAAAA,OAAO,CAAC/B,KAAR,CAAcmC,GAAd;AACD;AACF,KAXkC,CAanC;;;AACA9B,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAfD;;AAiBA,sBACE;AAAA,eACGT,IAAI,iBACH,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC,cAAb;AAA4B,MAAA,IAAI,EAAEC,OAAlC;AAAA,iBACG,GADH,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFF,EAEW,GAFX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAOGG,KAAK,iBAAI,QAAC,KAAD;AAAA,gBAAQA;AAAR;AAAA;AAAA;AAAA;AAAA,YAPZ,eAQE;AAAK,MAAA,SAAS,EAAEb,MAAM,CAACiD,IAAvB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEvC,OAAd;AAAuB,QAAA,QAAQ,EAAEM,OAAjC;AAA0C,QAAA,IAAI,EAAED;AAAhD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AACE,QAAA,MAAM,EAAEZ,MADV;AAEE,QAAA,MAAM,EAAEQ,OAFV;AAGE,QAAA,OAAO,EAAE8B,cAHX;AAIE,QAAA,KAAK,EAAE3B;AAJT;AAAA;AAAA;AAAA;AAAA,cAHF,eASE,QAAC,QAAD;AAAU,QAAA,UAAU,EAAEyB,UAAtB;AAAkC,QAAA,OAAO,EAAEhC,OAA3C;AAAoD,QAAA,OAAO,EAAEF;AAA7D;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAQ,QAAA,OAAO,EAAEiB,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAuBD;;GA5FQrB,I;;KAAAA,I;AA8FT,eAAeA,IAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Board from \"../Board\";\nimport Error from \"../Error\";\nimport Help from \"../Help\";\nimport KeyBoard from \"../KeyBoard\";\nimport Modal from \"../Modal\";\nimport NavBar from \"../NavBar\";\nimport styles from \"./style.module.css\";\n\nfunction Game(props) {\n  const [letter, setLetter] = useState();\n  const [changed, setChanged] = useState(false);\n  const [letters, setLetters] = useState({});\n  const [help, setHelp] = useState(false);\n  const [clicked, setClicked] = useState(0);\n  const [error, setError] = useState(\"\");\n  const [dark, setDark] = useState(false);\n  const [keyPresses, setKeyPresses] = useState([]);\n\n  const onClickDown = (event) => {\n    if (event.key === \"Enter\") {\n      setLetter(\"ENTER\");\n      setClicked(clicked + 1);\n      handleEnterPress();\n    } else if (event.key === \"Backspace\") {\n      // If \"Backspace\" is pressed, remove the last key press entry\n      setKeyPresses((prevKeyPresses) => prevKeyPresses.slice(0, -1));\n    } else if (\"abcdefghijklmnopqrstuvwxyz\".includes(event.key.toLowerCase())) {\n      const newKeyPress = {\n        type: \"entry_function_payload\",\n        function: `${props.address}::test4::pressedKey`,\n        arguments: [1, 0, 0, event.key.charCodeAt(0)],\n        type_arguments: [],\n      };\n      // Otherwise, add a new key press entry\n      setKeyPresses((prevKeyPresses) => [...prevKeyPresses, newKeyPress]);\n      setLetter(event.key.toUpperCase());\n      setClicked(clicked + 1);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onClickDown);\n\n    return () => window.removeEventListener(\"keydown\", onClickDown);\n  }, [keyPresses]);\n\n  useEffect(() => {\n    props.darkness(dark);\n  }, [dark]);\n\n  const keyHandler = (letterValue) => {\n    setLetter(letterValue);\n    setClicked(clicked + 1);\n  };\n\n  const LettersHandler = (lettersValue) => {\n    setLetters(lettersValue);\n    setChanged(!changed);\n  };\n\n  const handleEnterPress = async () => {\n    // Loop through key presses and send transactions\n    for (const keyPress of keyPresses) {\n      try {\n        console.log(keyPress)\n        const key = await window.aptos.signAndSubmitTransaction(keyPress);\n        console.log(key);\n        // Handle the result as needed\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    // Clear key presses after handling them\n    setKeyPresses([]);\n  };\n\n  return (\n    <>\n      {help && (\n        <Modal title=\"How to play!\" help={setHelp}>\n          {\" \"}\n          <Help />{\" \"}\n        </Modal>\n      )}\n      {error && <Error>{error}</Error>}\n      <div className={styles.game}>\n        <NavBar help={setHelp} darkness={setDark} dark={dark} />\n        <hr />\n        <Board\n          letter={letter}\n          clicks={clicked}\n          letters={LettersHandler}\n          error={setError}\n        />\n        <KeyBoard keyHandler={keyHandler} letters={letters} changed={changed} />\n        <button onClick={handleEnterPress}>Submit</button>\n      </div>\n    </>\n  );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}