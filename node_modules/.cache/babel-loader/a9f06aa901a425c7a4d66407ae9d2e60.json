{"ast":null,"code":"var _jsxFileName = \"/home/mahir/INTER-IIT/wordle/src/components/KeyBoard/index.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport BackspaceIcon from \"@mui/icons-material/Backspace\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst keyboard = {\n  line1: \"QWERTYUIOP\",\n  line2: \"ASDFGHJKL\",\n  line3: \"ZXCVBNM\"\n};\nlet defaultLetters = [];\n\"abcdefjhijklmnopqrstuvwxyz\".split(\"\").forEach(i => {\n  defaultLetters[i] = \"\";\n});\n\nfunction Key(props) {\n  _s();\n\n  const [state, setState] = useState(\"bg-gray-200 hover:bg-gray-300 dark:bg-zinc-400 dark:text-white dark:hover:bg-zinc-500\");\n  const x = props.value.length === 1 ? \"w-7 sm:w-10 \" : \"p-2 sm:p-4 \";\n\n  const returnKey = () => {\n    props.getKey(props.value);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (props.state === \"C\") setState(\"bg-correct text-white\");\n      if (props.state === \"E\") setState(\"bg-exist text-white\");\n      if (props.state === \"N\") setState(\"bg-wrong text-white dark:bg-gray-600\");\n    }, 350);\n  }, [props.state]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: x + state + \" h-14 300 grid items-center rounded font-semibold cursor-pointer\",\n    onClick: returnKey,\n    children: props.value === \"DEL\" ? /*#__PURE__*/_jsxDEV(BackspaceIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 32\n    }, this) : props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Key, \"Aq6/i/Mr9AofALQwaJAhnqwIGj0=\");\n\n_c = Key;\n\nfunction KeyBoard(props) {\n  _s2();\n\n  const [letters, setletters] = useState(defaultLetters);\n  const [keyPresses, setKeyPresses] = useState([]);\n  useEffect(() => {\n    setletters(props.letters);\n  }, [props.changed]);\n\n  const keyHandler = value => {\n    if (value === \"DEL\") {\n      // If \"DEL\" is pressed, remove the last key press entry\n      setKeyPresses(prevKeyPresses => prevKeyPresses.slice(0, -1));\n    } else {\n      // Otherwise, add a new key press entry\n      setKeyPresses(prevKeyPresses => [...prevKeyPresses, value]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center w-100 pb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-1 my-0.5 w-fit\",\n      children: keyboard.line1.split(\"\").map((value, key) => /*#__PURE__*/_jsxDEV(Key, {\n        getKey: keyHandler,\n        value: value,\n        state: letters[value]\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-1 my-0.5 w-fit\",\n      children: keyboard.line2.split(\"\").map((value, key) => /*#__PURE__*/_jsxDEV(Key, {\n        getKey: keyHandler,\n        value: value,\n        state: letters[value]\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-1 my-0.5 w-fit\",\n      children: [/*#__PURE__*/_jsxDEV(Key, {\n        value: \"ENTER\",\n        getKey: keyHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), keyboard.line3.split(\"\").map((value, key) => /*#__PURE__*/_jsxDEV(Key, {\n        getKey: keyHandler,\n        value: value,\n        state: letters[value]\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Key, {\n        value: \"DEL\",\n        getKey: keyHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(KeyBoard, \"iqzR6XL4ps6YBhAectx6nV/dmXE=\");\n\n_c2 = KeyBoard;\nexport default KeyBoard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Key\");\n$RefreshReg$(_c2, \"KeyBoard\");","map":{"version":3,"sources":["/home/mahir/INTER-IIT/wordle/src/components/KeyBoard/index.jsx"],"names":["useEffect","useState","BackspaceIcon","keyboard","line1","line2","line3","defaultLetters","split","forEach","i","Key","props","state","setState","x","value","length","returnKey","getKey","setTimeout","KeyBoard","letters","setletters","keyPresses","setKeyPresses","changed","keyHandler","prevKeyPresses","slice","map","key"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport BackspaceIcon from \"@mui/icons-material/Backspace\";\n\nconst keyboard = {\n  line1: \"QWERTYUIOP\",\n  line2: \"ASDFGHJKL\",\n  line3: \"ZXCVBNM\",\n};\n\nlet defaultLetters = [];\n\n\"abcdefjhijklmnopqrstuvwxyz\".split(\"\").forEach((i) => {\n  defaultLetters[i] = \"\";\n});\n\nfunction Key(props) {\n  const [state, setState] = useState(\"bg-gray-200 hover:bg-gray-300 dark:bg-zinc-400 dark:text-white dark:hover:bg-zinc-500\");\n\n  const x = props.value.length === 1 ? \"w-7 sm:w-10 \" : \"p-2 sm:p-4 \";\n  const returnKey = () => {\n    props.getKey(props.value);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (props.state === \"C\") setState(\"bg-correct text-white\");\n      if (props.state === \"E\") setState(\"bg-exist text-white\");\n      if (props.state === \"N\") setState(\"bg-wrong text-white dark:bg-gray-600\");\n    }, 350);\n  }, [props.state]);\n\n  return (\n    <button\n      className={\n        x +\n        state +\n        \" h-14 300 grid items-center rounded font-semibold cursor-pointer\"\n      }\n      onClick={returnKey}\n    >\n      {props.value === \"DEL\" ? <BackspaceIcon /> : props.value}\n    </button>\n  );\n}\n\nfunction KeyBoard(props) {\n  const [letters, setletters] = useState(defaultLetters);\n  const [keyPresses, setKeyPresses] = useState([]);\n  useEffect(() => {\n    setletters(props.letters);\n  }, [props.changed]);\n\n  const keyHandler = (value) => {\n    if (value === \"DEL\") {\n      // If \"DEL\" is pressed, remove the last key press entry\n      setKeyPresses((prevKeyPresses) => prevKeyPresses.slice(0, -1));\n    } else {\n      // Otherwise, add a new key press entry\n      setKeyPresses((prevKeyPresses) => [...prevKeyPresses, value]);\n    }\n  };\n  return (\n    <div className=\"flex flex-col items-center w-100 pb-5\">\n      <div className=\"flex gap-1 my-0.5 w-fit\">\n        {keyboard.line1.split(\"\").map((value, key) => (\n          <Key\n            getKey={keyHandler}\n            value={value}\n            key={key}\n            state={letters[value]}\n          />\n        ))}\n      </div>\n      <div className=\"flex gap-1 my-0.5 w-fit\">\n        {keyboard.line2.split(\"\").map((value, key) => (\n          <Key\n            getKey={keyHandler}\n            value={value}\n            key={key}\n            state={letters[value]}\n          />\n        ))}\n      </div>\n      <div className=\"flex gap-1 my-0.5 w-fit\">\n        <Key value=\"ENTER\" getKey={keyHandler} />\n        {keyboard.line3.split(\"\").map((value, key) => (\n          <Key\n            getKey={keyHandler}\n            value={value}\n            key={key}\n            state={letters[value]}\n          />\n        ))}\n        <Key value=\"DEL\" getKey={keyHandler} />\n      </div>\n    </div>\n  );\n}\n\nexport default KeyBoard;\n"]},"metadata":{},"sourceType":"module"}