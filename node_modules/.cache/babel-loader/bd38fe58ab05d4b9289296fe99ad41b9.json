{"ast":null,"code":"var _jsxFileName = \"/home/mahir/INTER-IIT/wordle/src/components/Game/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Board from \"../Board\";\nimport Error from \"../Error\";\nimport Help from \"../Help\";\nimport KeyBoard from \"../KeyBoard\";\nimport Modal from \"../Modal\";\nimport NavBar from \"../NavBar\";\nimport styles from \"./style.module.css\";\nimport handleEnterPress from \"src/components/KeyBoard/index.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Game(props) {\n  _s();\n\n  const [letter, setLetter] = useState();\n  const [changed, setChanged] = useState(false);\n  const [letters, setLetters] = useState({});\n  const [help, setHelp] = useState(false);\n  const [clicked, setClicked] = useState(0);\n  const [error, setError] = useState(\"\");\n  const [dark, setDark] = useState(false);\n\n  const onClickDown = event => {\n    if (event.key == \"Enter\") {\n      setLetter(\"ENTER\");\n      setClicked(clicked + 1);\n    } else if (event.key == \"Backspace\") {\n      setLetter(\"DEL\");\n      setClicked(clicked + 1);\n    } else if (\"abcdefghijklmnopqrstuvwxyz\".includes(event.key.toLowerCase())) {\n      setLetter(event.key.toUpperCase());\n      setClicked(clicked + 1);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onClickDown);\n    return () => window.removeEventListener(\"keydown\", onClickDown);\n  });\n  useEffect(() => {\n    props.darkness(dark);\n  }, [dark]);\n\n  const keyHandler = letterValue => {\n    setLetter(letterValue);\n    setClicked(clicked + 1);\n  };\n\n  const LettersHandler = lettersValue => {\n    setLetters(lettersValue);\n    setChanged(!changed);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [help && /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"How to play!\",\n      help: setHelp,\n      children: [\" \", /*#__PURE__*/_jsxDEV(Help, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Error, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.game,\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        help: setHelp,\n        darkness: setDark,\n        dark: dark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        letter: letter,\n        clicks: clicked,\n        letters: LettersHandler,\n        error: setError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KeyBoard, {\n        keyHandler: keyHandler,\n        letters: letters,\n        changed: changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Game, \"0gkzCcrnf7/VRAQccMR/RUqo0ok=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/mahir/INTER-IIT/wordle/src/components/Game/index.jsx"],"names":["useState","useEffect","Board","Error","Help","KeyBoard","Modal","NavBar","styles","handleEnterPress","Game","props","letter","setLetter","changed","setChanged","letters","setLetters","help","setHelp","clicked","setClicked","error","setError","dark","setDark","onClickDown","event","key","includes","toLowerCase","toUpperCase","window","addEventListener","removeEventListener","darkness","keyHandler","letterValue","LettersHandler","lettersValue","game"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Board from \"../Board\";\nimport Error from \"../Error\";\nimport Help from \"../Help\";\nimport KeyBoard from \"../KeyBoard\";\nimport Modal from \"../Modal\";\nimport NavBar from \"../NavBar\";\nimport styles from \"./style.module.css\";\nimport handleEnterPress from \"src/components/KeyBoard/index.jsx\"\n\nfunction Game(props) {\n  const [letter, setLetter] = useState();\n  const [changed, setChanged] = useState(false);\n  const [letters, setLetters] = useState({});\n  const [help, setHelp] = useState(false);\n  const [clicked, setClicked] = useState(0);\n  const [error, setError] = useState(\"\");\n  const [dark, setDark] = useState(false);\n\n  const onClickDown = (event) => {\n    if (event.key == \"Enter\") {\n      setLetter(\"ENTER\");\n      setClicked(clicked + 1);\n    } else if (event.key == \"Backspace\") {\n      setLetter(\"DEL\");\n      setClicked(clicked + 1);\n    } else if (\"abcdefghijklmnopqrstuvwxyz\".includes(event.key.toLowerCase())) {\n      setLetter(event.key.toUpperCase());\n      setClicked(clicked + 1);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onClickDown);\n\n    return () => window.removeEventListener(\"keydown\", onClickDown);\n  });\n\n  useEffect(() => {\n    props.darkness(dark);\n  }, [dark]);\n\n  const keyHandler = (letterValue) => {\n    setLetter(letterValue);\n    setClicked(clicked + 1);\n  };\n  const LettersHandler = (lettersValue) => {\n    setLetters(lettersValue);\n    setChanged(!changed);\n  };\n  return (\n    <>\n      {help && (\n        <Modal title=\"How to play!\" help={setHelp}>\n          {\" \"}\n          <Help />{\" \"}\n        </Modal>\n      )}\n      {error && <Error>{error}</Error>}\n      <div className={styles.game}>\n        <NavBar help={setHelp} darkness={setDark} dark={dark} />\n        <hr />\n        <Board\n          letter={letter}\n          clicks={clicked}\n          letters={LettersHandler}\n          error={setError}\n        />\n        <KeyBoard keyHandler={keyHandler} letters={letters} changed={changed} />\n      </div>\n    </>\n  );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}